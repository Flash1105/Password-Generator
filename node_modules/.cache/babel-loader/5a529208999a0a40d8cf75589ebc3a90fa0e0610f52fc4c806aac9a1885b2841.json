{"ast":null,"code":"var _jsxFileName = \"/home/flash1105/development/code/phase-2/Password-Generator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numCharacters, setNumCharacters] = useState(8); // Initial value is 8\n  const initialString = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Password Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numCharactersInput\",\n      children: \"Number of Characters:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"numCharactersInput\",\n      type: \"number\",\n      value: numCharacters,\n      onChange: e => setNumCharacters(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGeneratePassword,\n      children: \"Generate Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Password: \", generateRandomPassword(numCharacters)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EiZk5j2jNEDO8JEEMs/eBvG2MmQ=\");\n_c = App;\nconst generateRandomPassword = numCharacters => {\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let password = \"\";\n  for (let i = 0; i < numCharacters; i++) {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    password += characters.charAt(randomIndex);\n  }\n  return password;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","numCharacters","setNumCharacters","initialString","password","setPassword","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","parseInt","target","onClick","handleGeneratePassword","generateRandomPassword","_c","characters","i","randomIndex","Math","floor","random","length","charAt","$RefreshReg$"],"sources":["/home/flash1105/development/code/phase-2/Password-Generator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [numCharacters, setNumCharacters] = useState(8); // Initial value is 8\n  const initialString = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const [password, setPassword] = useState('');\n\n  return (\n    <div>\n      <h1>Password Generator</h1>\n\n      <label htmlFor=\"numCharactersInput\">Number of Characters:</label>\n      <input\n        id=\"numCharactersInput\"\n        type=\"number\"\n        value={numCharacters}\n        onChange={(e) => setNumCharacters(parseInt(e.target.value))}\n      />\n        <button onClick={handleGeneratePassword}>Generate Password</button>\n        <div>Password: {generateRandomPassword(numCharacters)}</div>\n\n      \n    </div>\n  );\n}\n\nconst generateRandomPassword = (numCharacters) => {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let password = \"\";\n  \n    for (let i = 0; i < numCharacters; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      password += characters.charAt(randomIndex);\n    }\n  \n    return password;\n  };\n  \n  \nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAMO,aAAa,GAAG,gEAAgE;EACtF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEE,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3BZ,OAAA;MAAOa,OAAO,EAAC,oBAAoB;MAAAL,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjEZ,OAAA;MACEc,EAAE,EAAC,oBAAoB;MACvBC,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEb,aAAc;MACrBc,QAAQ,EAAGC,CAAC,IAAKd,gBAAgB,CAACe,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACAZ,OAAA;MAAQqB,OAAO,EAAEC,sBAAuB;MAAAd,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEZ,OAAA;MAAAQ,QAAA,GAAK,YAAU,EAACe,sBAAsB,CAACpB,aAAa,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG3D,CAAC;AAEV;AAACV,EAAA,CAtBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAwBZ,MAAMsB,sBAAsB,GAAIpB,aAAa,IAAK;EAC9C,MAAMsB,UAAU,GAAG,gEAAgE;EACnF,IAAInB,QAAQ,GAAG,EAAE;EAEjB,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,aAAa,EAAEuB,CAAC,EAAE,EAAE;IACtC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,UAAU,CAACM,MAAM,CAAC;IACjEzB,QAAQ,IAAImB,UAAU,CAACO,MAAM,CAACL,WAAW,CAAC;EAC5C;EAEA,OAAOrB,QAAQ;AACjB,CAAC;AAGH,eAAeL,GAAG;AAAC,IAAAuB,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}