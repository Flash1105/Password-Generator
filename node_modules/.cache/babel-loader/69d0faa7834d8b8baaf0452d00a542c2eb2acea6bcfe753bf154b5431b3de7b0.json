{"ast":null,"code":"var _jsxFileName = \"/home/flash1105/development/code/phase-2/Password-Generator/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport zxcvbn from 'zxcvbn';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numCharacters, setNumCharacters] = useState(8);\n  const [password, setPassword] = useState('');\n  const [passwordHistory, setPasswordHistory] = useState([]);\n  const [passwordStrength, setPasswordStrength] = useState(0);\n  useEffect(() => {\n    calculatePasswordStrength(password);\n  }, [password]);\n  const generateRandomPassword = numCharacters => {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let password = \"\";\n    for (let i = 0; i < numCharacters; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      password += characters.charAt(randomIndex);\n    }\n    return password;\n  };\n  const handleGeneratePassword = () => {\n    const generatedPassword = generateRandomPassword(numCharacters);\n    setPassword(generatedPassword);\n    setPasswordHistory([...passwordHistory, generatedPassword]);\n  };\n  const calculatePasswordStrength = password => {\n    const passwordStrength = zxcvbn(password).score;\n    setPasswordStrength(passwordStrength);\n  };\n  const handleSavePassword = () => {\n    const newPassword = password;\n    // Make a POST request to the server to save the new password\n    fetch('http://localhost:3000/passwords', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: newPassword\n      })\n    }).then(res => res.json()).then(data => {\n      setPasswordHistory([...passwordHistory, data.password]);\n      setPassword('');\n      calculatePasswordStrength('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/passwords\",\n              children: \"Passwords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Password Generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numCharactersInput\",\n            children: \"Number of Characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"numCharactersInput\",\n            type: \"number\",\n            value: numCharacters,\n            onChange: e => setNumCharacters(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGeneratePassword,\n            children: \"Generate Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Generated Password: \", password]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Password Strength: \", passwordStrength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSavePassword,\n              children: \"Save Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/passwords\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Passwords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), passwordHistory.map((prevPassword, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: prevPassword\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LttJKg1LvFbFQvu/+Y6ULVHCqKo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","zxcvbn","BrowserRouter","Router","Route","Link","jsxDEV","_jsxDEV","App","_s","numCharacters","setNumCharacters","password","setPassword","passwordHistory","setPasswordHistory","passwordStrength","setPasswordStrength","calculatePasswordStrength","generateRandomPassword","characters","i","randomIndex","Math","floor","random","length","charAt","handleGeneratePassword","generatedPassword","score","handleSavePassword","newPassword","fetch","method","headers","body","JSON","stringify","then","res","json","data","children","to","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","htmlFor","id","type","value","onChange","e","parseInt","target","onClick","map","prevPassword","index","_c","$RefreshReg$"],"sources":["/home/flash1105/development/code/phase-2/Password-Generator/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport zxcvbn from 'zxcvbn';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  const [numCharacters, setNumCharacters] = useState(8);\n  const [password, setPassword] = useState('');\n  const [passwordHistory, setPasswordHistory] = useState([]);\n  const [passwordStrength, setPasswordStrength] = useState(0);\n\n  useEffect(() => {\n    calculatePasswordStrength(password);\n  }, [password]);\n\n  const generateRandomPassword = (numCharacters) => {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let password = \"\";\n\n    for (let i = 0; i < numCharacters; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      password += characters.charAt(randomIndex);\n    }\n\n    return password;\n  };\n\n  const handleGeneratePassword = () => {\n    const generatedPassword = generateRandomPassword(numCharacters);\n    setPassword(generatedPassword);\n    setPasswordHistory([...passwordHistory, generatedPassword]);\n  };\n\n  const calculatePasswordStrength = (password) => {\n    const passwordStrength = zxcvbn(password).score;\n    setPasswordStrength(passwordStrength);\n  };\n\n  const handleSavePassword = () => {\n    const newPassword = password;\n    // Make a POST request to the server to save the new password\n    fetch('http://localhost:3000/passwords', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ password: newPassword }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setPasswordHistory([...passwordHistory, data.password]);\n        setPassword('');\n        calculatePasswordStrength('');\n      });\n  };\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/passwords\">Passwords</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Route exact path=\"/\">\n          <div>\n            <h1>Password Generator</h1>\n\n            <label htmlFor=\"numCharactersInput\">Number of Characters:</label>\n            <input\n              id=\"numCharactersInput\"\n              type=\"number\"\n              value={numCharacters}\n              onChange={(e) => setNumCharacters(parseInt(e.target.value))}\n            />\n\n            <button onClick={handleGeneratePassword}>Generate Password</button>\n            <div>\n              <h2>Generated Password: {password}</h2>\n              <div>Password Strength: {passwordStrength}</div>\n              <button onClick={handleSavePassword}>Save Password</button>\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/passwords\">\n          <div>\n            <h1>Passwords</h1>\n            {passwordHistory.map((prevPassword, index) => (\n              <div key={index}>{prevPassword}</div>\n            ))}\n          </div>\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACdkB,yBAAyB,CAACN,QAAQ,CAAC;EACrC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMO,sBAAsB,GAAIT,aAAa,IAAK;IAChD,MAAMU,UAAU,GAAG,gEAAgE;IACnF,IAAIR,QAAQ,GAAG,EAAE;IAEjB,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,aAAa,EAAEW,CAAC,EAAE,EAAE;MACtC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,UAAU,CAACM,MAAM,CAAC;MACjEd,QAAQ,IAAIQ,UAAU,CAACO,MAAM,CAACL,WAAW,CAAC;IAC5C;IAEA,OAAOV,QAAQ;EACjB,CAAC;EAED,MAAMgB,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,iBAAiB,GAAGV,sBAAsB,CAACT,aAAa,CAAC;IAC/DG,WAAW,CAACgB,iBAAiB,CAAC;IAC9Bd,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEe,iBAAiB,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMX,yBAAyB,GAAIN,QAAQ,IAAK;IAC9C,MAAMI,gBAAgB,GAAGf,MAAM,CAACW,QAAQ,CAAC,CAACkB,KAAK;IAC/Cb,mBAAmB,CAACD,gBAAgB,CAAC;EACvC,CAAC;EAED,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,WAAW,GAAGpB,QAAQ;IAC5B;IACAqB,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1B,QAAQ,EAAEoB;MAAY,CAAC;IAChD,CAAC,CAAC,CACCO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd3B,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAE4B,IAAI,CAAC9B,QAAQ,CAAC,CAAC;MACvDC,WAAW,CAAC,EAAE,CAAC;MACfK,yBAAyB,CAAC,EAAE,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EAED,oBACEX,OAAA,CAACJ,MAAM;IAAAwC,QAAA,eACLpC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,eACEpC,OAAA;UAAAoC,QAAA,gBACEpC,OAAA;YAAAoC,QAAA,eACEpC,OAAA,CAACF,IAAI;cAACuC,EAAE,EAAC,GAAG;cAAAD,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACLzC,OAAA;YAAAoC,QAAA,eACEpC,OAAA,CAACF,IAAI;cAACuC,EAAE,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAENzC,OAAA,CAACH,KAAK;QAAC6C,KAAK;QAACC,IAAI,EAAC,GAAG;QAAAP,QAAA,eACnBpC,OAAA;UAAAoC,QAAA,gBACEpC,OAAA;YAAAoC,QAAA,EAAI;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE3BzC,OAAA;YAAO4C,OAAO,EAAC,oBAAoB;YAAAR,QAAA,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjEzC,OAAA;YACE6C,EAAE,EAAC,oBAAoB;YACvBC,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAE5C,aAAc;YACrB6C,QAAQ,EAAGC,CAAC,IAAK7C,gBAAgB,CAAC8C,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eAEFzC,OAAA;YAAQoD,OAAO,EAAE/B,sBAAuB;YAAAe,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnEzC,OAAA;YAAAoC,QAAA,gBACEpC,OAAA;cAAAoC,QAAA,GAAI,sBAAoB,EAAC/B,QAAQ;YAAA;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvCzC,OAAA;cAAAoC,QAAA,GAAK,qBAAmB,EAAC3B,gBAAgB;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDzC,OAAA;cAAQoD,OAAO,EAAE5B,kBAAmB;cAAAY,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAERzC,OAAA,CAACH,KAAK;QAAC8C,IAAI,EAAC,YAAY;QAAAP,QAAA,eACtBpC,OAAA;UAAAoC,QAAA,gBACEpC,OAAA;YAAAoC,QAAA,EAAI;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACjBlC,eAAe,CAAC8C,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBACvCvD,OAAA;YAAAoC,QAAA,EAAkBkB;UAAY,GAApBC,KAAK;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACvC,EAAA,CA/FQD,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AAiGZ,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}