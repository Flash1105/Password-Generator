{"ast":null,"code":"import fs from 'fs';\nexport const generateRandomPassword = numCharacters => {};\nexport const generateWordBasedPassword = () => {\n  const wordListPath = require.resolve('word-list');\n  words = fs.readFileSync(wordListPath, 'utf8').split('/n');\n  const randomIndex1 = Math.floor(Math.random() * words.length);\n  const randomIndex2 = Math.floor(Math.random() * words.length);\n  const word1 = words[randomIndex1];\n  const word2 = words[randomIndex2];\n  return `${word1}-${word2}`;\n};","map":{"version":3,"names":["fs","generateRandomPassword","numCharacters","generateWordBasedPassword","wordListPath","require","resolve","words","readFileSync","split","randomIndex1","Math","floor","random","length","randomIndex2","word1","word2"],"sources":["/home/flash1105/development/code/phase-2/Password-Generator/src/passwordUtils.js"],"sourcesContent":["import fs from 'fs';\n\nexport const generateRandomPassword = (numCharacters) => {\n  \n};\n\nexport const generateWordBasedPassword = () => {\n  const wordListPath = require.resolve('word-list');\n  words = fs.readFileSync(wordListPath, 'utf8').split('/n');\n  const randomIndex1 = Math.floor(Math.random() * words.length);\n  const randomIndex2 = Math.floor(Math.random() * words.length);\n  const word1 = words[randomIndex1];\n  const word2 = words[randomIndex2];\n  return `${word1}-${word2}`;\n};\n"],"mappings":"AAAA,OAAOA,EAAE,MAAM,IAAI;AAEnB,OAAO,MAAMC,sBAAsB,GAAIC,aAAa,IAAK,CAEzD,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAC7C,MAAMC,YAAY,GAAGC,OAAO,CAACC,OAAO,CAAC,WAAW,CAAC;EACjDC,KAAK,GAAGP,EAAE,CAACQ,YAAY,CAACJ,YAAY,EAAE,MAAM,CAAC,CAACK,KAAK,CAAC,IAAI,CAAC;EACzD,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC7D,MAAMC,YAAY,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC7D,MAAME,KAAK,GAAGT,KAAK,CAACG,YAAY,CAAC;EACjC,MAAMO,KAAK,GAAGV,KAAK,CAACQ,YAAY,CAAC;EACjC,OAAQ,GAAEC,KAAM,IAAGC,KAAM,EAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}