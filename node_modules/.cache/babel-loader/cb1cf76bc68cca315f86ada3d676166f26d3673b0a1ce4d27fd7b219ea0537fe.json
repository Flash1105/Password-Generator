{"ast":null,"code":"var _jsxFileName = \"/home/flash1105/development/code/phase-2/Password-Generator/src/WordPasswordGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport passwordGenerator from './passwordGenerator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordPasswordGenerator = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const generatePassword = () => {\n    const generatedPassword = passwordGenerator();\n    setPassword(generatedPassword);\n  };\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(password);\n      console.log('Password copied to clipboard!');\n    } catch (error) {\n      console.error('Failed to copy password to clipboard:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Word-based Password Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePassword,\n      children: \"Generate Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Generated Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(WordPasswordGenerator, \"Y/4oil5yuJ8nKfSTE84bnqMxt48=\");\n_c = WordPasswordGenerator;\nexport default WordPasswordGenerator;\nvar _c;\n$RefreshReg$(_c, \"WordPasswordGenerator\");","map":{"version":3,"names":["React","useState","passwordGenerator","jsxDEV","_jsxDEV","WordPasswordGenerator","_s","password","setPassword","generatePassword","generatedPassword","copyToClipboard","navigator","clipboard","writeText","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","readOnly","_c","$RefreshReg$"],"sources":["/home/flash1105/development/code/phase-2/Password-Generator/src/WordPasswordGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport passwordGenerator from './passwordGenerator';\n\nconst WordPasswordGenerator = () => {\n  const [password, setPassword] = useState('');\n\n  const generatePassword = () => {\n    const generatedPassword = passwordGenerator();\n    setPassword(generatedPassword);\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(password);\n      console.log('Password copied to clipboard!');\n    } catch (error) {\n      console.error('Failed to copy password to clipboard:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Word-based Password Generator</h2>\n      <button onClick={generatePassword}>Generate Password</button>\n      <div>\n        <label>Generated Password:</label>\n        <input type=\"text\" value={password} readOnly />\n        <button onClick={copyToClipboard}>Copy</button>\n      </div>\n    </div>\n  );\n};\n\nexport default WordPasswordGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,iBAAiB,GAAGR,iBAAiB,CAAC,CAAC;IAC7CM,WAAW,CAACE,iBAAiB,CAAC;EAChC,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACP,QAAQ,CAAC;MAC7CQ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtClB,OAAA;MAAQmB,OAAO,EAAEd,gBAAiB;MAAAS,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAO;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClClB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAElB,QAAS;QAACmB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/ClB,OAAA;QAAQmB,OAAO,EAAEZ,eAAgB;QAAAO,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,qBAAqB;AAAAsB,EAAA,GAArBtB,qBAAqB;AA8B3B,eAAeA,qBAAqB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}