{"ast":null,"code":"var _jsxFileName = \"/home/flash1105/development/code/phase-2/Password-Generator/src/WordPasswordGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordPasswordGenerator = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    const generateWordPassword = () => {\n      const wordList1 = ['red', 'blue', 'orange', 'green', 'yellow', 'purple', 'pink', 'brown', 'black', 'white', 'gray', 'teal', 'cyan', 'magenta', 'navy', 'turquoise', 'lavender', 'maroon', 'olive', 'salmon', 'gold', 'silver', 'indigo', 'coral', 'plum'];\n      const wordList2 = ['elephant', 'zebra', 'tiger', 'lion', 'giraffe', 'penguin', 'koala', 'kangaroo', 'hippopotamus', 'crocodile', 'cheetah', 'rhinoceros', 'gorilla', 'panda', 'lemur', 'jaguar', 'seagull', 'dolphin', 'squirrel', 'camel', 'flamingo', 'octopus', 'parrot', 'ostrich', 'turtle'];\n      const numberList = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\n      const word1 = getRandomWord(wordList1);\n      const word2 = getRandomWord(wordList2);\n      const randomNumber = getRandomNumber(numberList);\n      const generatedPassword = `${word1}-${word2}${randomNumber}`;\n      setPassword(generatedPassword);\n    };\n    generateWordPassword();\n  }, []);\n  const getRandomWord = wordList => {\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    return wordList[randomIndex];\n  };\n  const getRandomNumber = numberList => {\n    const randomIndex = Math.floor(Math.random() * numberList.length);\n    return numberList[randomIndex];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generated Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(WordPasswordGenerator, \"ClxsTWiDRtspfyOYCpl7W6Yolsw=\");\n_c = WordPasswordGenerator;\nexport default WordPasswordGenerator;\nvar _c;\n$RefreshReg$(_c, \"WordPasswordGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WordPasswordGenerator","_s","password","setPassword","generateWordPassword","wordList1","wordList2","numberList","word1","getRandomWord","word2","randomNumber","getRandomNumber","generatedPassword","wordList","randomIndex","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/flash1105/development/code/phase-2/Password-Generator/src/WordPasswordGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WordPasswordGenerator = () => {\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    const generateWordPassword = () => {\n      const wordList1 = ['red', 'blue', 'orange', 'green', 'yellow', 'purple', 'pink', 'brown', 'black', 'white', 'gray', 'teal', 'cyan', 'magenta', 'navy', 'turquoise', 'lavender', 'maroon', 'olive', 'salmon', 'gold', 'silver', 'indigo', 'coral', 'plum'];\n      const wordList2 = ['elephant', 'zebra', 'tiger', 'lion', 'giraffe', 'penguin', 'koala', 'kangaroo', 'hippopotamus', 'crocodile', 'cheetah', 'rhinoceros', 'gorilla', 'panda', 'lemur', 'jaguar', 'seagull', 'dolphin', 'squirrel', 'camel', 'flamingo', 'octopus', 'parrot', 'ostrich', 'turtle'];\n      const numberList = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\n\n      const word1 = getRandomWord(wordList1);\n      const word2 = getRandomWord(wordList2);\n      const randomNumber = getRandomNumber(numberList);\n\n      const generatedPassword = `${word1}-${word2}${randomNumber}`;\n      setPassword(generatedPassword);\n    };\n\n    generateWordPassword();\n  }, []);\n\n  const getRandomWord = (wordList) => {\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    return wordList[randomIndex];\n  };\n\n  const getRandomNumber = (numberList) => {\n    const randomIndex = Math.floor(Math.random() * numberList.length);\n    return numberList[randomIndex];\n  };\n\n  return (\n    <div>\n      <h1>Generated Password:</h1>\n      <p>{password}</p>\n    </div>\n  );\n};\n\nexport default WordPasswordGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMC,SAAS,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;MACzP,MAAMC,SAAS,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;MACjS,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAErE,MAAMC,KAAK,GAAGC,aAAa,CAACJ,SAAS,CAAC;MACtC,MAAMK,KAAK,GAAGD,aAAa,CAACH,SAAS,CAAC;MACtC,MAAMK,YAAY,GAAGC,eAAe,CAACL,UAAU,CAAC;MAEhD,MAAMM,iBAAiB,GAAI,GAAEL,KAAM,IAAGE,KAAM,GAAEC,YAAa,EAAC;MAC5DR,WAAW,CAACU,iBAAiB,CAAC;IAChC,CAAC;IAEDT,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,aAAa,GAAIK,QAAQ,IAAK;IAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC;IAC/D,OAAOL,QAAQ,CAACC,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMH,eAAe,GAAIL,UAAU,IAAK;IACtC,MAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGX,UAAU,CAACY,MAAM,CAAC;IACjE,OAAOZ,UAAU,CAACQ,WAAW,CAAC;EAChC,CAAC;EAED,oBACEhB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzB,OAAA;MAAAqB,QAAA,EAAIlB;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCID,qBAAqB;AAAAyB,EAAA,GAArBzB,qBAAqB;AAsC3B,eAAeA,qBAAqB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}