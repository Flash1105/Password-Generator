{"ast":null,"code":"var _jsxFileName = \"/home/flash1105/development/code/phase-2/Password-Generator/src/PasswordHistory.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordHistory(_ref) {\n  let {\n    passwordHistory,\n    copyToClipboard\n  } = _ref;\n  const handleCopyToClipboard = async password => {\n    try {\n      await navigator.clipboard.writeText(password);\n      console.log('Password copied to clipboard!');\n    } catch (error) {\n      console.error('Failed to copy password to clipboard:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), passwordHistory.length > 0 ? passwordHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Password: \", String(entry.password), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCopyToClipboard(String(entry.password)),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Notes: \", String(entry.notes)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No password history available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = PasswordHistory;\nexport default PasswordHistory;\nvar _c;\n$RefreshReg$(_c, \"PasswordHistory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PasswordHistory","_ref","passwordHistory","copyToClipboard","handleCopyToClipboard","password","navigator","clipboard","writeText","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","entry","index","String","onClick","notes","_c","$RefreshReg$"],"sources":["/home/flash1105/development/code/phase-2/Password-Generator/src/PasswordHistory.js"],"sourcesContent":["import React from 'react';\n\nfunction PasswordHistory({ passwordHistory, copyToClipboard }) {\n  const handleCopyToClipboard = async (password) => {\n    try {\n      await navigator.clipboard.writeText(password);\n      console.log('Password copied to clipboard!');\n    } catch (error) {\n      console.error('Failed to copy password to clipboard:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Password History</h2>\n      {passwordHistory.length > 0 ? (\n        passwordHistory.map((entry, index) => (\n          <div key={index}>\n            <div>\n              Password: {String(entry.password)}\n              <button onClick={() => handleCopyToClipboard(String(entry.password))}>Copy</button>\n            </div>\n            <div>Notes: {String(entry.notes)}</div>\n          </div>\n        ))\n      ) : (\n        <div>No password history available.</div>\n      )}\n    </div>\n  );\n}\n\nexport default PasswordHistory;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAAC,IAAA,EAAuC;EAAA,IAAtC;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EAC3D,MAAMG,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;IAChD,IAAI;MACF,MAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,QAAQ,CAAC;MAC7CI,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBd,eAAe,CAACe,MAAM,GAAG,CAAC,GACzBf,eAAe,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/BrB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAK,YACO,EAACS,MAAM,CAACF,KAAK,CAACd,QAAQ,CAAC,eACjCN,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMlB,qBAAqB,CAACiB,MAAM,CAACF,KAAK,CAACd,QAAQ,CAAC,CAAE;UAAAO,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACNjB,OAAA;QAAAa,QAAA,GAAK,SAAO,EAACS,MAAM,CAACF,KAAK,CAACI,KAAK,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAL/BI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN,CAAC,gBAEFjB,OAAA;MAAAa,QAAA,EAAK;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACQ,EAAA,GA5BQxB,eAAe;AA8BxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}